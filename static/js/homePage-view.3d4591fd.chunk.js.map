{"version":3,"file":"static/js/homePage-view.3d4591fd.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAcC,GAC5B,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAwCb,IAGhE,SAASc,EAAcD,GAC5B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACoBb,IAG5C,SAASe,EAAiBF,GAC/B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACoBb,IAG5C,SAASgB,EAAgBC,GAC9B,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBiB,M,iHC/BrD,EAAwB,2B,SCCT,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAA8BF,ICExB,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTtB,GAAQuB,EAAAA,EAAAA,MAARvB,IACR,GAA0BwB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAyBC,KAAKH,KAC7B,KAED,+BAEE,UAAC,KAAD,CAAOI,KAAK,IAAIC,OAAK,EAArB,WACE,SAACf,EAAD,CAAaC,KAAK,mBACjBQ,IACC,wBACGA,EAAMO,QAAQC,KAAI,SAAAC,GAAI,OACrB,yBACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKpC,EAAL,kBAAkBkC,EAAKG,IAC/BC,MAAO,CAAEC,KAAMlB,IAHnB,UAMGa,EAAKM,MACLN,EAAKO,SARDP,EAAKG,UAcpB","sources":["services/FilmsApi.js","webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","views/HomePage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '2df0d61e4e977c645a20818274a83726';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function FetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function FetchFilmById(filmId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${filmId}?api_key=${KEY}`);\n}\n\nexport function FetchFilmCast(filmId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${filmId}/credits?api_key=${KEY}`\n  );\n}\nexport function FetchFilmReviews(filmId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${filmId}/reviews?api_key=${KEY}`\n  );\n}\nexport function FetchFilmSearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}\n","import { useState, useEffect } from 'react';\nimport { Route, NavLink, useRouteMatch, useLocation } from 'react-router-dom';\nimport * as Trending from '../services/FilmsApi';\nimport PageHeading from '../components/PageHeading/PageHeading';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  const [films, setfilms] = useState(null);\n  useEffect(() => {\n    Trending.FetchTrending().then(setfilms);\n  }, []);\n  return (\n    <>\n      {/* <Switch> */}\n      <Route path=\"/\" exact>\n        <PageHeading text=\"Trending today\" />\n        {films && (\n          <ul>\n            {films.results.map(film => (\n              <li key={film.id}>\n                <NavLink\n                  to={{\n                    pathname: `${url}movies/${film.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {film.title}\n                  {film.name}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        <hr />\n      </Route>\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","FetchTrending","FetchFilmById","filmId","FetchFilmCast","FetchFilmReviews","FetchFilmSearch","query","PageHeading","text","className","styles","HomePage","location","useLocation","useRouteMatch","useState","films","setfilms","useEffect","Trending","then","path","exact","results","map","film","to","pathname","id","state","from","title","name"],"sourceRoot":""}